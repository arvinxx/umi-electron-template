name: Release CI
on:
  push:
    branches:
      - master

jobs:
  check:
    name: Code quality check
    runs-on: ubuntu-latest
    outputs:
      # Â∞Ü semantic ËæìÂá∫ÁöÑÂÄº‰Ωú‰∏∫‰∏ã‰∏ÄÁéØËäÇÁöÑËæìÂÖ•
      semantic: ${{ toJSON(steps.semantic.outputs) }} # ! MUST BE STRING
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.2
        with:
          node-version: '14'

      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ~/cache
            !~/cache/exclude
            **/node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Install
        run: yarn

      - name: Lint
        run: yarn lint && yarn tsc

      - name: Semantic Release with dryRun
        uses: cycjimmy/semantic-release-action@v2
        id: semantic
        with:
          dry_run: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  status:
    needs: check
    runs-on: ubuntu-latest
    name: Release Status
    steps:
      - name: Release Status
        run: echo "üö¶New Verison Release Status -> ${{ fromJSON(needs.check.outputs.semantic).new_release_published }}"

  build:
    needs: check
    name: Build
    if: needs.check.outputs.semantic.new_release_published == 'true'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.2
        with:
          node-version: '14'

      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ~/cache
            !~/cache/exclude
            **/node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Install
        run: yarn

      - name: Tricky version
        run: |
          npx npe version ${{ fromJSON(needs.check.outputs.semantic).new_release_version }}

      - name: Build
        run: yarn build --publish never # ‰∏ç‰ΩøÁî®ÂèëÂåÖÈÖçÁΩÆ https://www.electron.build/configuration/publish#how-to-publish

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: release
          path: |
            release/umi*.dmg*
            release/umi*.exe*
            release/umi*.AppImage

  list:
    needs: build
    name: List Artifact
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: release
          path: release

      - name: List artifact
        run: ls -al release

  publish:
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    needs: build
    name: Semantic release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: release
          path: release

      - name: List artifact
        run: ls -al release

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.2
        with:
          node-version: '14'

      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ~/cache
            !~/cache/exclude
            **/node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Install
        run: yarn

      - name: Release
        run: yarn release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
